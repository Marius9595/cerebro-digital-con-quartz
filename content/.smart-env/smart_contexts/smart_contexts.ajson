"smart_contexts:1749506269152": {"key":"1749506269152","context_items":{"NOTES/Test unitario (1).md":{"d":0},"NOTES/Las tres leyes de TDD.md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1749506341077": {"key":"1749506341077","context_items":{},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1749510228701": {"key":"1749510228701","context_items":{"NOTES/Bases de Lean UX (Product).md":{"d":0},"NOTES/Esperar demasiado tiempo para obtener feedback, es un desperdicio.md":{"d":0},"NOTES/Ciclos cortos de trabajo ventaja competitiva.md":{"d":0},"NOTES/Lean UX (Product).md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1749558787935": {"key":"1749558787935","context_items":{"NOTES/Alfabeto proposicional alternativo.md":{"d":0},"NOTES/Bases de Lean UX (Product).md":{"d":0},"NOTES/Cada test es un transición de un finitos estado de máquina que describe el comportamiento del sistema.md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1752161880178": {"key":"1752161880178","context_items":{"BIBLIOGRAPHY/CONFERENCE-TALKS/Moving IO to the edges of your app -  Functional Core Imperative Shell.md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1752161883212": {"key":"1752161883212","context_items":{"BIBLIOGRAPHY/CONFERENCE-TALKS/Moving IO to the edges of your app -  Functional Core Imperative Shell.md":{"d":0},"NOTES/Code smells en tu código core.md":{"d":0},"NOTES/Hay mantener el código IO alejado de la lógica de negocio.md":{"d":0},"NOTES/Domain-centric workflow.md":{"d":0},"NOTES/En la lógica de dominio hay que seguir los principios de diseño para generar código  puro .md":{"d":0},"NOTES/Functional Core, Imperative Shell Architecture.md":{"d":0},"NOTES/Reemplaza simplemente el tipo de IO en lugar de crear interfaces para cambiar diferentes implementaciones.md":{"d":0},"NOTES/Beneficios de escribir código puro para la lógica de dominio.md":{"d":0},"NOTES/Los unit tests prueban el core funcional y las integration tests prueban los workflows.md":{"d":0},"NOTES/Las validaciones de los datos deben ocurrir en la frontera de los procesos IO y Core (dominio).md":{"d":0},"NOTES/Las dependencias son elementos que introducen no-determinismo a una operación.md":{"d":0},"NOTES/Estrategias para gestionar dependencias.md":{"d":0},"NOTES/Dependency rejection.md":{"d":0},"NOTES/Dependency injection.md":{"d":0},"NOTES/Dependency parametrization.md":{"d":0},"NOTES/Dependency interpretation.md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1752608594240": {"key":"1752608594240","context_items":{"BIBLIOGRAPHY/CONFERENCE-TALKS/The Power of Composition.md":{"d":0},"NOTES/Guía de diseño de funciones para realizar composición.md":{"d":0},"NOTES/Una función es una  cosa  que transforma inputs en outputs.md":{"d":0},"NOTES/Una función es una  cosa  independiente (reusable) que no pertenece o está ligada a una clase.md":{"d":0},"NOTES/Una función puede ser usada como input o output de otras funciones.md":{"d":0},"NOTES/Los Types no son clases, son solo un nombre para un conjunto de cosas.md":{"d":0},"NOTES/Composición de Types.md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1752608985407": {"key":"1752608985407","context_items":{"NOTES/Composición de Types.md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1753470938123": {"key":"1753470938123","context_items":{"NOTES/Razones por las cuáles los lenguajes de programación se vuelven populares.md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1753472583163": {"key":"1753472583163","context_items":{"BIBLIOGRAPHY/VIDEOS/Why Isn't Functional Programming the Norm.md":{"d":0},"NOTES/Razones por las cuáles los lenguajes de programación se vuelven populares.md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1753473204102": {"key":"1753473204102","context_items":{"NOTES/Razones por las cuáles los lenguajes de programación se vuelven populares.md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1754602279072": {"key":"1754602279072","context_items":{"BIBLIOGRAPHY/VIDEOS/Functional Desing Patterns.md":{"d":0},"NOTES/Functional Core, Imperative Shell Architecture.md":{"d":0},"NOTES/Hay mantener el código IO alejado de la lógica de negocio.md":{"d":0},"NOTES/Los unit tests prueban el core funcional y las integration tests prueban los workflows.md":{"d":0},"NOTES/Trabajar en progromación funcional permite alcanzar aislamiento de dependencias y la testabilidad con menor esfuerzo.md":{"d":0},"NOTES/Las validaciones de los datos deben ocurrir en la frontera de los procesos IO y Core (dominio).md":{"d":0},"NOTES/La programación orientada a objetos trata sobre manejo o gestión de dependencias.md":{"d":0},"NOTES/Arquitectura de Puertos y Adaptadores en un paradigma funcional  surge de manera natural al empujar a los bordes las funciones impuras.md":{"d":0},"NOTES/La arquitectura de puertos y adaptadores en POO requiere de un gran esfuerzo para aplicarla bien y mantenerla.md":{"d":0},"NOTES/Puedes llamar funciones puras en funciones impuras, pero no lo hagas al revés.md":{"d":0},"NOTES/Composición de Types.md":{"d":0},"NOTES/Composición con currificación.md":{"d":0},"NOTES/Una función puede ser usada como input o output de otras funciones.md":{"d":0},"NOTES/Una función es una  cosa  independiente (reusable) que no pertenece o está ligada a una clase.md":{"d":0},"NOTES/Las pipelines al ser componibles, son extensibles.md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1754845441764": {"key":"1754845441764","context_items":{"index.md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1754845441764": {"key":"1754845441764","context_items":{"index.md":{"d":0},"haz que este documento sea una buena landing para una página que sobre  mi  cerebro digital":{"d":0}},"context_opts":{},"class_name":"SmartContext"},
"smart_contexts:1754845667728": {"key":"1754845667728","context_items":{"BIBLIOGRAPHY/VIDEOS/Functional architecture - The pits of success.md":{"d":0}},"context_opts":{},"class_name":"SmartContext"},